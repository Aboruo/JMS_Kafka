<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <description>Spring Configuration</description>

    <!-- 加载配置属性文件(使用了maven的profile配置，提示找不到配置文件正常，编译后即可找到) -->
    <context:property-placeholder location="classpath:cfg.properties, classpath:db.properties"/>

    <!-- 使用Annotation自动注册Bean，解决事物失效问题：-->
    <!--在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解-->
    <!-- base-package 如果多个，用“,”分隔 -->
    <context:component-scan
            base-package="com.isimpo,com.isimpo.base,com.isimpo.common,com.isimpo.app,com.isimpo.logic">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置 JSR303 Bean Validator 定义 -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <bean id="httpComponentsClientHttpRequestFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
        <property name="connectTimeout" value="${http.connectTimeout}"/>
        <property name="connectionRequestTimeout" value="${http.connectionRequestTimeout}"/>
        <property name="readTimeout" value="${http.readTimeout}"/>
    </bean>

    <!--Rest请求模板 -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="httpComponentsClientHttpRequestFactory"/>
    </bean>
    <!--Rest请求模板-->
<!--    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>-->

    <!--spring缓存配置，可以配置各种具体缓存实现-->
    <bean id="cacheManager" class="org.springframework.cache.guava.GuavaCacheManager">
        <property name="cacheBuilder">
            <bean class="com.google.common.cache.CacheBuilder" factory-method="from">
                <constructor-arg value="maximumSize=1000,expireAfterWrite=1m"/>
            </bean>
        </property>
    </bean>

    <!-- 数据源配置, 使用 druid 数据库连接池 -->
    <import resource="spring-context-datasource.xml"/>

    <!--导入 redis 缓存配置 -->
    <import resource="spring-context-redis.xml"/>

    <!--导入 定时任务 -->
   <import resource="spring-context-quartz.xml"/>

    <!-- ====================================================================================== -->
    <!-- 配置 Spring Session -->
    <!-- ====================================================================================== -->
    <!--配置 Session保存策略-redis -->
    <bean id="httpSessonStrategy" class="org.springframework.session.web.http.HeaderHttpSessionStrategy">
        <property name="headerName" value="${auth.token}"></property>
    </bean>
    <!--配置 普通http请求 Session 过滤器-->

    <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="${session.http.timeout}" />
        <property name="httpSessionStrategy" ref="httpSessonStrategy"/>
        <property name="redisNamespace" value="apisessions"/>
    </bean>

</beans>
